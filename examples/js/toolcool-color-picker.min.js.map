{
  "version": 3,
  "sources": ["../../src/domain/events-provider.ts", "../../src/ui/themecolors/themecolors.ts", "../../node_modules/@ctrl/tinycolor/dist/module/util.js", "../../node_modules/@ctrl/tinycolor/dist/module/conversion.js", "../../node_modules/@ctrl/tinycolor/dist/module/css-color-names.js", "../../node_modules/@ctrl/tinycolor/dist/module/format-input.js", "../../node_modules/@ctrl/tinycolor/dist/module/index.js", "../../src/domain/common-provider.ts", "../../src/domain/color-provider.ts", "../../src/ui/saturation/saturation.ts", "../../src/ui/hue/hue.ts", "../../src/ui/alpha/alpha.ts", "../../src/ui/fields/fields.ts", "../../src/ui/popup/popup.ts", "../../src/app/color-picker.ts", "../../src/index.ts"],
  "sourcesContent": ["export const CUSTOM_EVENT_COLOR_HSV_CHANGED = 'tc-hsv-changed';\r\nexport const CUSTOM_EVENT_COLOR_HUE_CHANGED = 'tc-hue-changed';\r\nexport const CUSTOM_EVENT_COLOR_ALPHA_CHANGED = 'tc-alpha-changed';\r\nexport const CUSTOM_EVENT_BUTTON_CLICKED = 'tc-button-clicked';\r\nexport const CUSTOM_EVENT_COLOR_INDEX_CHANGED = 'tc-color-index-changed';\r\nexport const CUSTOM_EVENT_THEME_COLOR_CHANGED = 'tc-theme-color-changed';\r\n\r\nexport const sendButtonClickedCustomEvent = (cid: string) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_BUTTON_CLICKED, {\r\n      detail: {\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const sendAlphaCustomEvent = (cid: string, a: number) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, {\r\n      detail: {\r\n        a,\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const sendHsvCustomEvent = (cid: string, h: number, s: number, v: number) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_COLOR_HSV_CHANGED, {\r\n      detail: {\r\n        h,\r\n        s,\r\n        v,\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const sendHueCustomEvent = (cid: string, h: number) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_COLOR_HUE_CHANGED, {\r\n      detail: {\r\n        h,\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const sendColorIndexCustomEvent = (cid: string, i: number) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_COLOR_INDEX_CHANGED, {\r\n      detail: {\r\n        i,\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n\r\nexport const sendThemeColorCustomEvent = (cid: string, tc: string) => {\r\n  if (!cid) return;\r\n\r\n  document.dispatchEvent(\r\n    new CustomEvent(CUSTOM_EVENT_THEME_COLOR_CHANGED, {\r\n      detail: {\r\n        tc,\r\n        cid,\r\n      },\r\n    })\r\n  );\r\n};\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './themecolors.pcss';\r\nimport { CUSTOM_EVENT_COLOR_INDEX_CHANGED, sendColorIndexCustomEvent } from '../../domain/events-provider';\r\n\r\nclass ThemeColors extends HTMLElement {\r\n  // this id attribute is used for custom events\r\n  private cid: string;\r\n  private $buttonContainer: HTMLElement | null;\r\n  private $buttons: NodeList | null;\r\n\r\n  static get observedAttributes() {\r\n    return ['color-index', 'theme-colors'];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n  }\r\n\r\n  handleClick(evt: any) {\r\n    if (evt.target?.tagName === 'BUTTON') {\r\n      const newIndex = evt.target.getAttribute('data-index');\r\n      if (newIndex != this.getAttribute('color-index')) {\r\n        this.setAttribute('color-index', newIndex);\r\n        sendColorIndexCustomEvent(this.cid, newIndex);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class=\"themeColors\">\r\n                <button data-index=\"0\"></button>\r\n                <button data-index=\"1\"></button>\r\n                <button data-index=\"2\"></button>\r\n                <button data-index=\"3\"></button>\r\n                <button data-index=\"4\"></button>\r\n                <button data-index=\"5\"></button>\r\n                <button data-index=\"6\"></button>\r\n                <button data-index=\"7\"></button>\r\n           </div>\r\n        `;\r\n\r\n    this.$buttonContainer = this.shadowRoot.querySelector('.themeColors');\r\n    this.$buttons = this.$buttonContainer?.querySelectorAll(`button`) as NodeList;\r\n    this.$buttonContainer?.addEventListener('click', this.handleClick);\r\n\r\n    const colors = JSON.parse(this.getAttribute('theme-colors') || '[]');\r\n    const index = parseInt(this.getAttribute('color-index') || '-1');\r\n\r\n    this.$buttons?.forEach(($button) => {\r\n      const $btn = $button as HTMLElement;\r\n      if (!$btn)\r\n        return;\r\n      const btnIndex = parseInt($btn.getAttribute('data-index') || '-1');\r\n      if (btnIndex === index) {\r\n        $btn.setAttribute('data-selected', 'true');\r\n      }\r\n      if (btnIndex >= 0 && btnIndex < colors.length) {\r\n        $btn.style.backgroundColor = colors[btnIndex];\r\n      } else {\r\n        $btn.style.backgroundColor = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$buttonContainer?.removeEventListener('click', this.handleClick);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\r\n    if (!this.$buttonContainer)\r\n      return;\r\n    if (_attrName === 'theme-colors') {\r\n      const colors = JSON.parse(newVal);\r\n      this.$buttons?.forEach(($button) => {\r\n        const $btn = $button as HTMLElement;\r\n        if (!$btn)\r\n          return;\r\n        const btnIndex = parseInt($btn.getAttribute('data-index') || '-1');\r\n        if (btnIndex >= 0 && btnIndex < colors.length) {\r\n          $btn.style.backgroundColor = colors[btnIndex];\r\n        } else {\r\n          $btn.style.backgroundColor = '';\r\n        }\r\n      });\r\n    }\r\n    if (_attrName === 'color-index') {\r\n      this.$buttons?.forEach(($button) => {\r\n        const $btn = $button as HTMLElement;\r\n        if (!$btn)\r\n          return;\r\n        if ($btn.getAttribute('data-index') === newVal) {\r\n          $btn.setAttribute('data-selected', 'true');\r\n        } else {\r\n          $btn.removeAttribute('data-selected');\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default ThemeColors;\r\n", "/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return \"\".concat(Number(n) * 100, \"%\");\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n", "import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n", "// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n", "/* eslint-disable @typescript-eslint/no-redundant-type-constituents */\nimport { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n", "import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns whether the color is monochrome.\n     */\n    TinyColor.prototype.isMonochrome = function () {\n        var s = this.toHsl().s;\n        return s === 0;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # prefixed.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # prefixed.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the shorter hex value of the color depends on its alpha -with a # prefixed.\n     * @param allowShortChar will shorten hex value to 3 or 4 char if possible\n     */\n    TinyColor.prototype.toHexShortString = function (allowShortChar) {\n        if (allowShortChar === void 0) { allowShortChar = false; }\n        return this.a === 1 ? this.toHexString(allowShortChar) : this.toHex8String(allowShortChar);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        var alpha = fg.a + bg.a * (1 - fg.a);\n        return new TinyColor({\n            r: (fg.r * fg.a + bg.r * bg.a * (1 - fg.a)) / alpha,\n            g: (fg.g * fg.a + bg.g * bg.a * (1 - fg.a)) / alpha,\n            b: (fg.b * fg.a + bg.b * bg.a * (1 - fg.a)) / alpha,\n            a: alpha,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n", "export const getUniqueId = () => {\r\n  return Math.random().toString(16).slice(2);\r\n};\r\n\r\nexport const round2places = (num: number) => {\r\n  return Math.round((num + Number.EPSILON) * 100) / 100;\r\n};\r\n", "import { TinyColor } from '@ctrl/tinycolor';\r\nimport { round2places } from './common-provider';\r\n\r\nexport const SATURATION_STEP = 0.01;\r\n\r\n/**\r\n * This hue background is used in saturation component.\r\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=hsl\r\n * @param {number} hue - [0, 360]\r\n */\r\nexport const getHueBackground = (hue: number) => {\r\n  if (hue < 0) {\r\n    hue = 0;\r\n  }\r\n  if (hue > 360) {\r\n    hue = 360;\r\n  }\r\n  return `hsl(${Math.round(hue)}, 100%, 50%)`;\r\n};\r\n\r\n/**\r\n * This alpha color background is used in the alpha component.\r\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=rgba\r\n */\r\nexport const getAlphaColorBackground = (color: TinyColor) => {\r\n  const rgba = color.toRgb();\r\n  return `linear-gradient(to right, rgba(${rgba.r},${rgba.g},${rgba.b}, 0) 0%, rgba(${rgba.r},${rgba.g},${rgba.b}, 1) 100%)`;\r\n};\r\n\r\nexport const rgbaToString = (color: TinyColor) => {\r\n  const rgba = color.toRgb();\r\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${round2places(rgba.a)})`;\r\n};\r\n\r\nexport const hslaToString = (color: TinyColor) => {\r\n  const hsla = color.toHsl();\r\n  return `hsla(${Math.round(hsla.h)}, ${Math.round(hsla.s * 100)}%, ${Math.round(hsla.l * 100)}%, ${round2places(hsla.a)})`;\r\n};\r\n\r\nexport const hsvaToString = (color: TinyColor) => {\r\n  const hsva = color.toHsv();\r\n  return `hsva(${Math.round(hsva.h)}, ${Math.round(hsva.s * 100)}%, ${Math.round(hsva.v * 100)}%, ${round2places(hsva.a)})`;\r\n};\r\n\r\n/**\r\n * Saturation: get top position in % by value from hsv.\r\n * @param {number} value - [0, 1]\r\n */\r\nexport const getTopByValue = (value: number) => {\r\n  if (value < 0) {\r\n    value = 0;\r\n  }\r\n  if (value > 1) {\r\n    value = 1;\r\n  }\r\n  const top = -(value * 100) + 100;\r\n  return `${top.toFixed(2)}%`;\r\n};\r\n\r\n/**\r\n * Saturation: get left position in % by saturation from hsv.\r\n * @param {number} saturation - [0, 1]\r\n */\r\nexport const getLeftBySaturation = (saturation: number) => {\r\n  if (saturation < 0) {\r\n    saturation = 0;\r\n  }\r\n  if (saturation > 1) {\r\n    saturation = 1;\r\n  }\r\n\r\n  const top = saturation * 100;\r\n  return `${top.toFixed(2)}%`;\r\n};\r\n\r\n/**\r\n * Hue: get left position in % by hue from hsv.\r\n * @param {number} hue - [0, 360]\r\n */\r\nexport const getLeftByHue = (hue: number) => {\r\n  if (hue < 0) {\r\n    hue = 0;\r\n  }\r\n\r\n  if (hue > 360) {\r\n    hue = 360;\r\n  }\r\n  const left = (hue * 100) / 360;\r\n  let rounded = Math.round(left * 1e2) / 1e2; // round to 2 decimal places\r\n\r\n  if (rounded < 0) {\r\n    rounded = 0;\r\n  }\r\n\r\n  if (rounded > 100) {\r\n    rounded = 100;\r\n  }\r\n\r\n  return rounded;\r\n};\r\n\r\n/**\r\n * Ig given left position in % ---> return the relevant hue.\r\n */\r\nexport const getHueByLeft = (left: number) => {\r\n  return (360 * left) / 100;\r\n};\r\n\r\n/**\r\n * returns a number in the range [0, 255]\r\n */\r\nexport const fixRGB = (updatedValue: string | number) => {\r\n  let value = Number(updatedValue) || 0;\r\n  value = Math.round(value);\r\n  value = Math.max(0, value);\r\n  value = Math.min(255, value);\r\n  return value;\r\n};\r\n\r\n/**\r\n * returns a number in the range [0, 100]\r\n */\r\nexport const fixPercent = (updatedValue: string | number) => {\r\n  let value = Number(updatedValue) || 100;\r\n  value = Math.round(value);\r\n  value = Math.max(0, value);\r\n  value = Math.min(100, value);\r\n  return value;\r\n};\r\n\r\nexport const parseColor = (colorString: string | null) => {\r\n  const color = new TinyColor(colorString || '#000');\r\n  color.setAlpha(color.getAlpha());\r\n  return color;\r\n};\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './saturation.pcss';\r\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendHsvCustomEvent } from '../../domain/events-provider';\r\nimport { getHueBackground, getLeftBySaturation, getTopByValue, parseColor, SATURATION_STEP } from '../../domain/color-provider';\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker-saturation color=\"#000\" cid=\"...\"></toolcool-color-picker-saturation>\r\n */\r\nclass Saturation extends HTMLElement {\r\n  // this id attribute is used for custom events\r\n  private cid: string;\r\n\r\n  private $saturation: HTMLElement | null;\r\n  private $color: HTMLElement | null;\r\n  private $pointer: HTMLElement | null;\r\n\r\n  private hue = 0; // [0, 360]\r\n  private saturation = 0; // [0, 1]\r\n  private value = 0; // [0, 1]\r\n\r\n  static get observedAttributes() {\r\n    return ['color'];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onPointerKeyDown = this.onPointerKeyDown.bind(this);\r\n\r\n    this.hsvChanged = this.hsvChanged.bind(this);\r\n    this.hueChanged = this.hueChanged.bind(this);\r\n  }\r\n\r\n  render(sendEvent: boolean) {\r\n    // re-render\r\n    if (this.$pointer) {\r\n      this.$pointer.style.left = getLeftBySaturation(this.saturation);\r\n      this.$pointer.style.top = getTopByValue(this.value);\r\n    }\r\n\r\n    if (this.$color) {\r\n      this.$color.setAttribute('style', `background: ${getHueBackground(this.hue)}`);\r\n    }\r\n\r\n    if (sendEvent) {\r\n      // update outer color to change the button, and\r\n      // send the updated color to the user\r\n      sendHsvCustomEvent(this.cid, this.hue, this.saturation, this.value);\r\n    }\r\n  }\r\n\r\n  // we need to handle both MouseEvent and TouchEvent --->\r\n  // eslint-disable-next-line\r\n  onChange(evt: any) {\r\n    if (!this.$saturation) return;\r\n\r\n    const { width: boxWidth, height: boxHeight, left: boxLeft, top: boxTop } = this.$saturation.getBoundingClientRect();\r\n    if (boxWidth === 0 || boxHeight === 0) return;\r\n\r\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\r\n    const mouseY = typeof evt.clientY === 'number' ? evt.clientY : evt.touches[0].clientY;\r\n\r\n    const lPos = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\r\n    const tPos = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\r\n\r\n    this.saturation = lPos / boxWidth;\r\n    this.value = 1 - tPos / boxHeight;\r\n\r\n    this.render(true);\r\n  }\r\n\r\n  onPointerKeyDown(evt: KeyboardEvent) {\r\n    switch (evt.key) {\r\n      case 'ArrowLeft': {\r\n        this.saturation = Math.max(0, this.saturation - SATURATION_STEP);\r\n        this.render(true);\r\n        break;\r\n      }\r\n\r\n      case 'ArrowRight': {\r\n        this.saturation = Math.min(1, this.saturation + SATURATION_STEP);\r\n        this.render(true);\r\n        break;\r\n      }\r\n\r\n      case 'ArrowUp': {\r\n        this.value = Math.min(1, this.value + SATURATION_STEP);\r\n        this.render(true);\r\n        break;\r\n      }\r\n\r\n      case 'ArrowDown': {\r\n        evt.preventDefault();\r\n        this.value = Math.max(0, this.value - SATURATION_STEP);\r\n        this.render(true);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseDown(evt: MouseEvent) {\r\n    if (evt.preventDefault) {\r\n      evt.preventDefault();\r\n    }\r\n\r\n    this.onChange(evt);\r\n\r\n    window.addEventListener('mousemove', this.onChange);\r\n    window.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    window.setTimeout(() => {\r\n      this.$pointer?.focus();\r\n    }, 0);\r\n  }\r\n\r\n  onMouseUp() {\r\n    window.removeEventListener('mousemove', this.onChange);\r\n    window.removeEventListener('mouseup', this.onChange);\r\n  }\r\n\r\n  hsvChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    let changed = false;\r\n\r\n    if (this.hue !== evt.detail.h) {\r\n      this.hue = evt.detail.h;\r\n      changed = true;\r\n    }\r\n\r\n    if (this.saturation !== evt.detail.s) {\r\n      this.saturation = evt.detail.s;\r\n      changed = true;\r\n    }\r\n\r\n    if (this.value !== evt.detail.v) {\r\n      this.value = evt.detail.v;\r\n      changed = true;\r\n    }\r\n\r\n    if (changed) {\r\n      this.render(false);\r\n    }\r\n  }\r\n\r\n  hueChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    this.hue = evt.detail.h;\r\n\r\n    this.render(false);\r\n  }\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n\r\n    const color = parseColor(this.getAttribute('color'));\r\n    const hsv = color.toHsv();\r\n\r\n    this.hue = hsv.h;\r\n    this.saturation = hsv.s;\r\n    this.value = hsv.v;\r\n\r\n    const top = getTopByValue(this.value);\r\n    const left = getLeftBySaturation(this.saturation);\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class=\"saturation\">\r\n                <div class=\"box\" style=\"background: ${getHueBackground(this.hue)}\">\r\n                    <div class=\"white box\">\r\n                        <div class=\"black box\"></div>\r\n                        \r\n                        <div class=\"pointer\" tabindex=\"0\" style=\"top: ${top}; left: ${left};\">\r\n                            <div class=\"handler\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        `;\r\n\r\n    this.$saturation = this.shadowRoot.querySelector('.saturation');\r\n    this.$color = this.shadowRoot.querySelector('.box');\r\n    this.$pointer = this.shadowRoot.querySelector('.pointer');\r\n\r\n    this.$pointer?.addEventListener('keydown', this.onPointerKeyDown);\r\n    this.$saturation?.addEventListener('mousedown', this.onMouseDown);\r\n    this.$saturation?.addEventListener('mouseup', this.onMouseUp);\r\n    this.$saturation?.addEventListener('touchmove', this.onChange);\r\n    this.$saturation?.addEventListener('touchstart', this.onChange);\r\n\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$saturation?.removeEventListener('mousedown', this.onMouseDown);\r\n    this.$saturation?.removeEventListener('mouseup', this.onMouseUp);\r\n    this.$saturation?.removeEventListener('touchmove', this.onChange);\r\n    this.$saturation?.removeEventListener('touchstart', this.onChange);\r\n    this.$pointer?.removeEventListener('keydown', this.onPointerKeyDown);\r\n\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\r\n    const color = parseColor(newVal);\r\n    const hsv = color.toHsv();\r\n\r\n    this.hue = hsv.h;\r\n    this.saturation = hsv.s;\r\n    this.value = hsv.v;\r\n\r\n    this.render(false);\r\n  }\r\n}\r\n\r\nexport default Saturation;\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './hue.pcss';\r\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, sendHueCustomEvent } from '../../domain/events-provider';\r\nimport { getHueByLeft, getLeftByHue, parseColor } from '../../domain/color-provider';\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker-hue color=\"#000\" cid=\"...\"></toolcool-color-picker-hue>\r\n */\r\nclass Hue extends HTMLElement {\r\n  // this id attribute is used for custom events\r\n  private cid: string;\r\n\r\n  private $hue: HTMLElement | null;\r\n  private $pointer: HTMLElement | null;\r\n\r\n  private hue = 0; // [0, 360]\r\n\r\n  static get observedAttributes() {\r\n    return ['color'];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n\r\n    this.hsvChanged = this.hsvChanged.bind(this);\r\n  }\r\n\r\n  render(sendEvent: boolean) {\r\n    if (this.$pointer) {\r\n      this.$pointer.style.left = `${getLeftByHue(this.hue)}%`;\r\n    }\r\n\r\n    // update outer color to change the button, and\r\n    // send the updated color to the user\r\n    if (sendEvent)\r\n      sendHueCustomEvent(this.cid, this.hue);\r\n  }\r\n\r\n  hsvChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    if (this.hue !== evt.detail.h) {\r\n      this.hue = evt.detail.h;\r\n      this.render(false);\r\n    }\r\n  }\r\n\r\n  // we need to handle both MouseEvent and TouchEvent --->\r\n  // eslint-disable-next-line\r\n  onChange(evt: any) {\r\n    if (!this.$hue) return;\r\n\r\n    if (evt.preventDefault) {\r\n      evt.preventDefault();\r\n    }\r\n\r\n    const { width: boxWidth, left: boxLeft } = this.$hue.getBoundingClientRect();\r\n    if (boxWidth === 0) return;\r\n\r\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\r\n\r\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\r\n    const percent = Math.min(Math.max(0, Math.round((left * 100) / boxWidth)), 100);\r\n\r\n    this.hue = getHueByLeft(percent);\r\n    this.render(true);\r\n  }\r\n\r\n  onKeyDown(evt: KeyboardEvent) {\r\n    this.$pointer?.focus();\r\n\r\n    switch (evt.key) {\r\n      case 'ArrowLeft': {\r\n        let percent = getLeftByHue(this.hue);\r\n        percent = Math.max(0, percent - 1);\r\n        this.hue = getHueByLeft(percent);\r\n        this.render(true);\r\n        break;\r\n      }\r\n\r\n      case 'ArrowRight': {\r\n        let percent = getLeftByHue(this.hue);\r\n        percent = Math.min(100, percent + 1);\r\n        this.hue = getHueByLeft(percent);\r\n        this.render(true);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onMouseDown(evt: MouseEvent) {\r\n    if (evt.preventDefault) {\r\n      evt.preventDefault();\r\n    }\r\n\r\n    this.onChange(evt);\r\n\r\n    window.addEventListener('mousemove', this.onChange);\r\n    window.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    window.setTimeout(() => {\r\n      this.$pointer?.focus();\r\n    }, 0);\r\n  }\r\n\r\n  onMouseUp() {\r\n    window.removeEventListener('mousemove', this.onChange);\r\n    window.removeEventListener('mouseup', this.onChange);\r\n  }\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n\r\n    const color = parseColor(this.getAttribute('color'));\r\n    this.hue = color.toHsv().h;\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class=\"hue\">\r\n                <div class=\"box\">\r\n                    <div class=\"hue-v box\">\r\n                        <div class=\"hue-h\"></div>\r\n                    </div>\r\n                    \r\n                    <div class=\"pointer box\">\r\n                        <div class=\"pointer-box\" tabindex=\"0\" style=\"left: ${getLeftByHue(this.hue)}%\">\r\n                            <div class=\"handler\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        `;\r\n\r\n    this.$hue = this.shadowRoot.querySelector('.hue');\r\n    this.$pointer = this.shadowRoot.querySelector('.pointer-box');\r\n\r\n    this.$hue?.addEventListener('mousedown', this.onMouseDown);\r\n    this.$hue?.addEventListener('mouseup', this.onMouseUp);\r\n    this.$hue?.addEventListener('touchmove', this.onChange);\r\n    this.$hue?.addEventListener('touchstart', this.onChange);\r\n\r\n    this.$pointer?.addEventListener('keydown', this.onKeyDown);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$hue?.removeEventListener('mousedown', this.onMouseDown);\r\n    this.$hue?.removeEventListener('mouseup', this.onMouseUp);\r\n    this.$hue?.removeEventListener('touchmove', this.onChange);\r\n    this.$hue?.removeEventListener('touchstart', this.onChange);\r\n    this.$pointer?.removeEventListener('keydown', this.onKeyDown);\r\n\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\r\n    const color = parseColor(newVal);\r\n    const hsv = color.toHsv();\r\n\r\n    this.hue = hsv.h;\r\n    this.render(false);\r\n  }\r\n}\r\n\r\nexport default Hue;\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './alpha.pcss';\r\nimport { CUSTOM_EVENT_COLOR_ALPHA_CHANGED, CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendAlphaCustomEvent } from '../../domain/events-provider';\r\nimport { getAlphaColorBackground, parseColor } from '../../domain/color-provider';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker-alpha color=\"#000\" cid=\"...\"></toolcool-color-picker-alpha>\r\n */\r\nclass Alpha extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['color'];\r\n  }\r\n\r\n  // this id attribute is used for custom events\r\n  private cid: string;\r\n\r\n  private $alpha: HTMLElement | null;\r\n  private $color: HTMLElement | null;\r\n  private $pointer: HTMLElement | null;\r\n\r\n  private alpha = 1; // [0, 1]\r\n  private hue = 0; // [0, 360]\r\n  private saturation = 0; // [0, 1]\r\n  private value = 0; // [0, 1]\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n\r\n    this.hsvChanged = this.hsvChanged.bind(this);\r\n    this.hueChanged = this.hueChanged.bind(this);\r\n    this.alphaChanged = this.alphaChanged.bind(this);\r\n  }\r\n\r\n  render(sendEvent: boolean) {\r\n    if (this.$pointer) {\r\n      this.$pointer.style.left = `${this.alpha * 100}%`;\r\n    }\r\n\r\n    if (this.$color) {\r\n      const color = new TinyColor({\r\n        h: this.hue,\r\n        s: this.saturation,\r\n        v: this.value,\r\n        a: this.alpha,\r\n      });\r\n\r\n      this.$color.style.background = getAlphaColorBackground(color);\r\n    }\r\n\r\n    if (sendEvent) {\r\n      sendAlphaCustomEvent(this.cid, this.alpha);\r\n    }\r\n  }\r\n\r\n  // we need to handle both MouseEvent and TouchEvent --->\r\n  // eslint-disable-next-line\r\n  onChange(evt: any) {\r\n    if (!this.$alpha) return;\r\n\r\n    if (evt.preventDefault) {\r\n      evt.preventDefault();\r\n    }\r\n\r\n    const { width: boxWidth, left: boxLeft } = this.$alpha.getBoundingClientRect();\r\n    if (boxWidth === 0) return;\r\n\r\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\r\n\r\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\r\n    const percent = Math.min(Math.max(0, (left * 100) / boxWidth), 100);\r\n\r\n    this.alpha = percent / 100;\r\n    this.render(true);\r\n  }\r\n\r\n  onKeyDown(evt: KeyboardEvent) {\r\n    this.$pointer?.focus();\r\n\r\n    switch (evt.key) {\r\n      case 'ArrowLeft': {\r\n        let percent = this.alpha * 100;\r\n        percent = Math.max(0, percent - 1);\r\n        this.alpha = percent / 100;\r\n        this.render(true);\r\n        break;\r\n      }\r\n\r\n      case 'ArrowRight': {\r\n        let percent = this.alpha * 100;\r\n        percent = Math.min(100, percent + 1);\r\n        this.alpha = percent / 100;\r\n        this.render(true);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  hsvChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    this.saturation = evt.detail.s;\r\n    this.hue = evt.detail.h;\r\n    this.value = evt.detail.v;\r\n\r\n    this.render(false);\r\n  }\r\n\r\n  hueChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    this.hue = evt.detail.h;\r\n\r\n    this.render(false);\r\n  }\r\n\r\n  alphaChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    if (this.alpha !== evt.detail.a) {\r\n      this.alpha = evt.detail.a;\r\n      this.render(true);\r\n    }\r\n  }\r\n\r\n  onMouseDown(evt: MouseEvent) {\r\n    if (evt.preventDefault) {\r\n      evt.preventDefault();\r\n    }\r\n\r\n    this.onChange(evt);\r\n\r\n    window.addEventListener('mousemove', this.onChange);\r\n    window.addEventListener('mouseup', this.onMouseUp);\r\n\r\n    window.setTimeout(() => {\r\n      this.$pointer?.focus();\r\n    }, 0);\r\n  }\r\n\r\n  onMouseUp() {\r\n    window.removeEventListener('mousemove', this.onChange);\r\n    window.removeEventListener('mouseup', this.onChange);\r\n  }\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n\r\n    const color = parseColor(this.getAttribute('color'));\r\n    const hsv = color.toHsv();\r\n\r\n    this.alpha = hsv.a;\r\n    this.hue = hsv.h;\r\n    this.saturation = hsv.s;\r\n    this.value = hsv.v;\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class=\"alpha\">\r\n                <div class=\"box\">\r\n                    <div class=\"transparent-bg box\"></div>\r\n                    <div class=\"color-bg box\" style=\"background: ${getAlphaColorBackground(color)}\"></div>\r\n                    \r\n                    <div class=\"pointer box\">\r\n                        <div class=\"pointer-box\" tabindex=\"0\" style=\"left: ${this.alpha * 100}%;\" >\r\n                            <div class=\"handler\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n           </div>\r\n        `;\r\n\r\n    this.$alpha = this.shadowRoot.querySelector('.alpha');\r\n    this.$color = this.shadowRoot.querySelector('.color-bg');\r\n    this.$pointer = this.shadowRoot.querySelector('.pointer-box');\r\n\r\n    this.$alpha?.addEventListener('mousedown', this.onMouseDown);\r\n    this.$alpha?.addEventListener('mouseup', this.onMouseUp);\r\n    this.$alpha?.addEventListener('touchmove', this.onChange);\r\n    this.$alpha?.addEventListener('touchstart', this.onChange);\r\n    this.$pointer?.addEventListener('keydown', this.onKeyDown);\r\n\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$alpha?.removeEventListener('mousedown', this.onMouseDown);\r\n    this.$alpha?.removeEventListener('mouseup', this.onMouseUp);\r\n    this.$alpha?.removeEventListener('touchmove', this.onChange);\r\n    this.$alpha?.removeEventListener('touchstart', this.onChange);\r\n    this.$pointer?.removeEventListener('keydown', this.onKeyDown);\r\n\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\r\n    const color = parseColor(newVal);\r\n    const hsv = color.toHsv();\r\n\r\n    this.alpha = hsv.a;\r\n    this.hue = hsv.h;\r\n    this.saturation = hsv.s;\r\n    this.value = hsv.v;\r\n\r\n    this.render(false);\r\n  }\r\n}\r\n\r\nexport default Alpha;\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './fields.pcss';\r\nimport { CUSTOM_EVENT_COLOR_ALPHA_CHANGED, CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendAlphaCustomEvent, sendHsvCustomEvent } from '../../domain/events-provider';\r\nimport { TinyColor } from '@ctrl/tinycolor';\r\nimport { fixPercent, fixRGB, parseColor } from '../../domain/color-provider';\r\nimport { getUniqueId } from '../../domain/common-provider';\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker-fields color=\"#000\" cid=\"...\"></toolcool-color-picker-fields>\r\n */\r\nclass Fields extends HTMLElement {\r\n  // this id attribute is used for custom events\r\n  private cid: string;\r\n  private color: TinyColor = new TinyColor('#000');\r\n\r\n  private $hex: HTMLInputElement;\r\n  private $r: HTMLInputElement;\r\n  private $g: HTMLInputElement;\r\n  private $b: HTMLInputElement;\r\n  private $a: HTMLInputElement;\r\n\r\n  private hex = '';\r\n  private r = 0;\r\n  private g = 0;\r\n  private b = 0;\r\n  private a = 1;\r\n\r\n  static get observedAttributes() {\r\n    return ['color'];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.hsvChanged = this.hsvChanged.bind(this);\r\n    this.hueChanged = this.hueChanged.bind(this);\r\n    this.alphaChanged = this.alphaChanged.bind(this);\r\n\r\n    this.onHexChange = this.onHexChange.bind(this);\r\n    this.render = this.render.bind(this);\r\n    this.onRedChange = this.onRedChange.bind(this);\r\n    this.onGreenChange = this.onGreenChange.bind(this);\r\n    this.onBlueChange = this.onBlueChange.bind(this);\r\n    this.onAlphaChange = this.onAlphaChange.bind(this);\r\n    this.onRedKeyDown = this.onRedKeyDown.bind(this);\r\n    this.onBlueKeyDown = this.onBlueKeyDown.bind(this);\r\n    this.onGreenKeyDown = this.onGreenKeyDown.bind(this);\r\n    this.onAlphaKeyDown = this.onAlphaKeyDown.bind(this);\r\n  }\r\n\r\n  hueChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    const hsv = this.color.toHsv();\r\n\r\n    this.color = new TinyColor({\r\n      h: Number(evt.detail.h),\r\n      s: hsv.s,\r\n      v: hsv.v,\r\n      a: hsv.a,\r\n    });\r\n\r\n    this.render();\r\n  }\r\n\r\n  alphaChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    const rgba = this.color.toRgb();\r\n    rgba.a = evt.detail.a;\r\n\r\n    this.color = new TinyColor(rgba);\r\n    this.render();\r\n  }\r\n\r\n  hsvChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    this.color = new TinyColor({\r\n      h: evt.detail.h,\r\n      s: evt.detail.s,\r\n      v: evt.detail.v,\r\n      a: this.color.toHsv().a,\r\n    });\r\n\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    const rgba = this.color.toRgb();\r\n    this.r = rgba.r;\r\n    this.g = rgba.g;\r\n    this.b = rgba.b;\r\n    this.a = rgba.a;\r\n    this.hex = this.color.toHex();\r\n\r\n    if (this.$hex && this.shadowRoot?.activeElement !== this.$hex) {\r\n      this.$hex.value = this.hex.toUpperCase();\r\n    }\r\n\r\n    if (this.$r && this.shadowRoot?.activeElement !== this.$r) {\r\n      this.$r.value = this.r.toString();\r\n    }\r\n\r\n    if (this.$g && this.shadowRoot?.activeElement !== this.$g) {\r\n      this.$g.value = this.g.toString();\r\n    }\r\n\r\n    if (this.$b && this.shadowRoot?.activeElement !== this.$b) {\r\n      this.$b.value = this.b.toString();\r\n    }\r\n\r\n    if (this.$a && this.shadowRoot?.activeElement !== this.$a) {\r\n      this.$a.value = Math.round(this.a * 100).toString();\r\n    }\r\n  }\r\n\r\n  onFieldKeyDown(evt: KeyboardEvent, type: string) {\r\n    const rgba = this.color.toRgb();\r\n\r\n    switch (evt.key) {\r\n      case 'ArrowUp': {\r\n        if (type === 'r') {\r\n          this.r = Math.min(255, rgba.r + 1);\r\n          rgba.r = this.r;\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$r.value = this.r.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'g') {\r\n          this.g = Math.min(255, rgba.g + 1);\r\n          rgba.g = this.g;\r\n\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$g.value = this.g.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'b') {\r\n          this.b = Math.min(255, rgba.b + 1);\r\n          rgba.b = this.b;\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$b.value = this.b.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'a') {\r\n          this.a = Math.max(0, Math.min(this.a + 0.01, 1));\r\n          this.$a.value = Math.round(this.a * 100).toString();\r\n\r\n          const rgba = this.color.toRgb();\r\n          rgba.a = this.a;\r\n          this.color = new TinyColor(rgba);\r\n\r\n          this.render();\r\n          sendAlphaCustomEvent(this.cid, this.a);\r\n        }\r\n        break;\r\n      }\r\n      case 'ArrowDown': {\r\n        if (type === 'r') {\r\n          this.r = Math.max(0, rgba.r - 1);\r\n          rgba.r = this.r;\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$r.value = this.r.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'g') {\r\n          this.g = Math.max(0, rgba.g - 1);\r\n          rgba.g = this.g;\r\n\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$g.value = this.g.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'b') {\r\n          this.b = Math.max(0, rgba.b - 1);\r\n          rgba.b = this.b;\r\n          const hsv = new TinyColor(rgba).toHsv();\r\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n          this.$b.value = this.b.toString();\r\n          this.render();\r\n        }\r\n        if (type === 'a') {\r\n          this.a = Math.max(0, this.a - 0.01);\r\n          this.$a.value = Math.round(this.a * 100).toString();\r\n\r\n          const rgba = this.color.toRgb();\r\n          rgba.a = this.a;\r\n          this.color = new TinyColor(rgba);\r\n\r\n          this.render();\r\n          sendAlphaCustomEvent(this.cid, this.a);\r\n        }\r\n        break;\r\n      }\r\n      case 'Escape': {\r\n        if (this.shadowRoot?.activeElement) {\r\n          const $el = this.shadowRoot.activeElement as HTMLElement;\r\n          $el.blur();\r\n        }\r\n\r\n        this.render();\r\n        break;\r\n      }\r\n      case 'Enter': {\r\n        if (this.shadowRoot?.activeElement) {\r\n          const $el = this.shadowRoot.activeElement as HTMLElement;\r\n          $el.blur();\r\n        }\r\n\r\n        this.render();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  onRedKeyDown(evt: KeyboardEvent) {\r\n    this.onFieldKeyDown(evt, 'r');\r\n  }\r\n\r\n  onGreenKeyDown(evt: KeyboardEvent) {\r\n    this.onFieldKeyDown(evt, 'g');\r\n  }\r\n\r\n  onBlueKeyDown(evt: KeyboardEvent) {\r\n    this.onFieldKeyDown(evt, 'b');\r\n  }\r\n\r\n  onAlphaKeyDown(evt: KeyboardEvent) {\r\n    this.onFieldKeyDown(evt, 'a');\r\n  }\r\n\r\n  onHexChange(evt: Event) {\r\n    const $target = evt.target as HTMLInputElement;\r\n    if ($target.value.length !== 6) return;\r\n\r\n    const updatedColor = new TinyColor(`#${$target.value}`);\r\n\r\n    if (updatedColor.isValid) {\r\n      this.color = updatedColor;\r\n\r\n      const hsv = this.color.toHsv();\r\n\r\n      // update outer color to change the button, and\r\n      // send the updated color to the user\r\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n    }\r\n  }\r\n\r\n  onRedChange(evt: Event) {\r\n    const $target = evt.target as HTMLInputElement;\r\n    const fixedValue = fixRGB($target.value);\r\n\r\n    if (fixedValue.toString() === $target.value) {\r\n      const rgba = this.color.toRgb();\r\n      rgba.r = fixedValue;\r\n      const hsv = new TinyColor(rgba).toHsv();\r\n\r\n      // update outer color to change the button, and\r\n      // send the updated color to the user\r\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n    }\r\n  }\r\n\r\n  onGreenChange(evt: Event) {\r\n    const $target = evt.target as HTMLInputElement;\r\n    const fixedValue = fixRGB($target.value);\r\n\r\n    if (fixedValue.toString() === $target.value) {\r\n      const rgba = this.color.toRgb();\r\n      rgba.g = fixedValue;\r\n      const hsv = new TinyColor(rgba).toHsv();\r\n\r\n      // update outer color to change the button, and\r\n      // send the updated color to the user\r\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n    }\r\n  }\r\n\r\n  onBlueChange(evt: Event) {\r\n    const $target = evt.target as HTMLInputElement;\r\n    const fixedValue = fixRGB($target.value);\r\n\r\n    if (fixedValue.toString() === $target.value) {\r\n      const rgba = this.color.toRgb();\r\n      rgba.b = fixedValue;\r\n      const hsv = new TinyColor(rgba).toHsv();\r\n\r\n      // update outer color to change the button, and\r\n      // send the updated color to the user\r\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\r\n    }\r\n  }\r\n\r\n  onAlphaChange(evt: Event) {\r\n    const $target = evt.target as HTMLInputElement;\r\n    const fixedValue = fixPercent($target.value);\r\n\r\n    if (fixedValue.toString() === $target.value) {\r\n      sendAlphaCustomEvent(this.cid, fixedValue / 100);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n    this.color = parseColor(this.getAttribute('color'));\r\n\r\n    const rgba = this.color.toRgb();\r\n    this.r = rgba.r;\r\n    this.g = rgba.g;\r\n    this.b = rgba.b;\r\n    this.a = rgba.a;\r\n    this.hex = this.color.toHex();\r\n\r\n    const hexId = getUniqueId();\r\n    const rId = getUniqueId();\r\n    const gId = getUniqueId();\r\n    const bId = getUniqueId();\r\n    const aId = getUniqueId();\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class=\"fields\">\r\n               <input id=\"hex-${hexId}\" type=\"text\" value=\"${this.hex.toUpperCase()}\" data-type=\"hex\" />\r\n               <input id=\"r-${rId}\" type=\"text\" value=\"${this.r}\" data-type=\"r\" />\r\n               <input id=\"g-${gId}\" type=\"text\" value=\"${this.g}\" data-type=\"g\" />\r\n               <input id=\"b-${bId}\" type=\"text\" value=\"${this.b}\" data-type=\"b\" />\r\n               <input id=\"a-${aId}\" type=\"text\" value=\"${Math.round(this.a * 100)}\" data-type=\"a\" />\r\n               \r\n               <label for=\"hex-${hexId}\">Hex</label>\r\n               <label for=\"r-${rId}\">R</label>\r\n               <label for=\"g-${gId}\">G</label>\r\n               <label for=\"b-${bId}\">B</label>\r\n               <label for=\"a-${aId}\">A</label>\r\n           </div>\r\n        `;\r\n\r\n    this.$hex = this.shadowRoot.getElementById(`hex-${hexId}`) as HTMLInputElement;\r\n    this.$r = this.shadowRoot.getElementById(`r-${rId}`) as HTMLInputElement;\r\n    this.$g = this.shadowRoot.getElementById(`g-${gId}`) as HTMLInputElement;\r\n    this.$b = this.shadowRoot.getElementById(`b-${bId}`) as HTMLInputElement;\r\n    this.$a = this.shadowRoot.getElementById(`a-${aId}`) as HTMLInputElement;\r\n\r\n    // custom event from other parts of the app\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n\r\n    this.$hex.addEventListener('input', this.onHexChange);\r\n    this.$r.addEventListener('input', this.onRedChange);\r\n    this.$g.addEventListener('input', this.onGreenChange);\r\n    this.$b.addEventListener('input', this.onBlueChange);\r\n    this.$a.addEventListener('input', this.onAlphaChange);\r\n\r\n    this.$hex.addEventListener('blur', this.render);\r\n    this.$r.addEventListener('blur', this.render);\r\n    this.$g.addEventListener('blur', this.render);\r\n    this.$b.addEventListener('blur', this.render);\r\n    this.$a.addEventListener('blur', this.render);\r\n\r\n    this.$r.addEventListener('keydown', this.onRedKeyDown);\r\n    this.$g.addEventListener('keydown', this.onGreenKeyDown);\r\n    this.$b.addEventListener('keydown', this.onBlueKeyDown);\r\n    this.$a.addEventListener('keydown', this.onAlphaKeyDown);\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n\r\n    this.$hex.removeEventListener('input', this.onHexChange);\r\n    this.$r.removeEventListener('input', this.onRedChange);\r\n    this.$g.removeEventListener('input', this.onGreenChange);\r\n    this.$b.removeEventListener('input', this.onBlueChange);\r\n    this.$a.removeEventListener('input', this.onAlphaChange);\r\n\r\n    this.$hex.removeEventListener('blur', this.render);\r\n    this.$r.removeEventListener('blur', this.render);\r\n    this.$g.removeEventListener('blur', this.render);\r\n    this.$b.removeEventListener('blur', this.render);\r\n    this.$a.removeEventListener('blur', this.render);\r\n\r\n    this.$r.removeEventListener('keydown', this.onRedKeyDown);\r\n    this.$g.removeEventListener('keydown', this.onGreenKeyDown);\r\n    this.$b.removeEventListener('keydown', this.onBlueKeyDown);\r\n    this.$a.removeEventListener('keydown', this.onAlphaKeyDown);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\r\n    this.color = parseColor(newVal);\r\n    this.render();\r\n  }\r\n}\r\n\r\nexport default Fields;\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './popup.pcss';\r\nimport ThemeColors from '../themecolors/themecolors';\r\nimport Saturation from '../saturation/saturation';\r\nimport Hue from '../hue/hue';\r\nimport Alpha from '../alpha/alpha';\r\nimport Fields from '../fields/fields';\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker-popup color=\"#000\" cid=\"...\" popup-position=\"left\"></toolcool-color-picker-popup>\r\n */\r\nclass ColorPickerPopup extends HTMLElement {\r\n  // this id attribute is used for custom events\r\n  private readonly cid: string;\r\n  private popupPosition = 'left';\r\n\r\n  private $popup: HTMLElement | null;\r\n  private color = '#000';\r\n  private colorIndex = -1;\r\n  private themeColors = [];\r\n\r\n  static get observedAttributes() {\r\n    return ['color', 'theme-colors', 'color-index', 'popup-position'];\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // register web components\r\n    if (!customElements.get('toolcool-color-picker-theme-colors')) {\r\n      customElements.define('toolcool-color-picker-theme-colors', ThemeColors);\r\n    }\r\n\r\n    if (!customElements.get('toolcool-color-picker-saturation')) {\r\n      customElements.define('toolcool-color-picker-saturation', Saturation);\r\n    }\r\n\r\n    if (!customElements.get('toolcool-color-picker-hue')) {\r\n      customElements.define('toolcool-color-picker-hue', Hue);\r\n    }\r\n\r\n    if (!customElements.get('toolcool-color-picker-alpha')) {\r\n      customElements.define('toolcool-color-picker-alpha', Alpha);\r\n    }\r\n\r\n    if (!customElements.get('toolcool-color-picker-fields')) {\r\n      customElements.define('toolcool-color-picker-fields', Fields);\r\n    }\r\n\r\n    this.cid = this.getAttribute('cid') || '';\r\n    this.prevent = this.prevent.bind(this);\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n  }\r\n\r\n  prevent(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n    const themeColorsStr = this.getAttribute('theme-colors') || '[]';\r\n    this.color = this.getAttribute('color') || '#000';\r\n    this.themeColors = JSON.parse(themeColorsStr);\r\n    this.colorIndex = parseInt(this.getAttribute('color-index') || '-1');\r\n    this.popupPosition = this.getAttribute('popup-position') || 'left';\r\n\r\n    this.shadowRoot.innerHTML = `\r\n           <style>${styles}</style>\r\n           <div class='popup'>\r\n                <toolcool-color-picker-theme-colors color-index='${this.colorIndex}' theme-colors='${themeColorsStr}' cid='${this.cid}'></toolcool-color-picker-theme-colors>\r\n                <toolcool-color-picker-saturation color='${this.color}' cid='${this.cid}'></toolcool-color-picker-saturation>\r\n                <toolcool-color-picker-hue color='${this.color}' cid='${this.cid}'></toolcool-color-picker-hue>\r\n                <toolcool-color-picker-alpha color='${this.color}' cid='${this.cid}'></toolcool-color-picker-alpha>\r\n                <toolcool-color-picker-fields color='${this.color}' cid='${this.cid}'></toolcool-color-picker-fields>\r\n           </div>\r\n        `;\r\n\r\n    this.$popup = this.shadowRoot.querySelector('.popup');\r\n    this.$popup?.addEventListener('mousedown', this.prevent); // disable 'click outside' feature inside the popup\r\n    this.$popup?.classList.toggle('right', this.popupPosition === 'right');\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$popup?.removeEventListener('mousedown', this.prevent);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(attrName: string, _oldVal: string, newVal: string) {\r\n    if (attrName === 'popup-position') {\r\n      this.popupPosition = newVal;\r\n\r\n      if (this.$popup) {\r\n        this.$popup.classList.toggle('right', this.popupPosition === 'right');\r\n      }\r\n    }\r\n  \r\n    if (attrName === 'theme-colors') {\r\n      this.themeColors = JSON.parse(newVal || '[]');\r\n      const $themeColor = this.shadowRoot?.querySelector('toolcool-color-picker-theme-colors');\r\n      if ($themeColor) {\r\n        $themeColor.setAttribute('theme-colors', newVal);\r\n      }\r\n    }\r\n\r\n    if (attrName === 'color-index') {\r\n      this.colorIndex = parseInt(newVal);\r\n      const $themeColor = this.shadowRoot?.querySelector('toolcool-color-picker-theme-colors');\r\n      if ($themeColor) {\r\n        $themeColor.setAttribute('color-index', newVal);\r\n      }\r\n    }\r\n\r\n    if (attrName === 'color') {\r\n      this.color = newVal;\r\n\r\n      const $saturation = this.shadowRoot?.querySelector('toolcool-color-picker-saturation');\r\n      const $hue = this.shadowRoot?.querySelector('toolcool-color-picker-hue');\r\n      const $alpha = this.shadowRoot?.querySelector('toolcool-color-picker-alpha');\r\n      const $fields = this.shadowRoot?.querySelector('toolcool-color-picker-fields');\r\n\r\n      if ($saturation) {\r\n        $saturation.setAttribute('color', this.color);\r\n      }\r\n\r\n      if ($hue) {\r\n        $hue.setAttribute('color', this.color);\r\n      }\r\n\r\n      if ($alpha) {\r\n        $alpha.setAttribute('color', this.color);\r\n      }\r\n\r\n      if ($fields) {\r\n        $fields.setAttribute('color', this.color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColorPickerPopup;\r\n", "// @ts-ignore: esbuild custom loader\r\nimport styles from './styles.pcss';\r\nimport ColorPickerPopup from '../ui/popup/popup';\r\nimport {\r\n  CUSTOM_EVENT_COLOR_HSV_CHANGED,\r\n  CUSTOM_EVENT_COLOR_HUE_CHANGED,\r\n  CUSTOM_EVENT_COLOR_ALPHA_CHANGED,\r\n  CUSTOM_EVENT_BUTTON_CLICKED,\r\n  CUSTOM_EVENT_COLOR_INDEX_CHANGED,\r\n  CUSTOM_EVENT_THEME_COLOR_CHANGED,\r\n  sendButtonClickedCustomEvent\r\n} from '../domain/events-provider';\r\nimport { getUniqueId } from '../domain/common-provider';\r\nimport { hslaToString, hsvaToString, parseColor, rgbaToString } from '../domain/color-provider';\r\nimport { TinyColor } from '@ctrl/tinycolor'; // https://github.com/scttcper/tinycolor\r\nimport { ColorInput } from '@ctrl/tinycolor/dist';\r\n\r\n/**\r\n * predefined button widths\r\n */\r\nconst buttonPredefinedSizes: { [key: string]: string } = {\r\n  sm: '0.875rem',\r\n  md: '1.2rem',\r\n  lg: '1.5rem',\r\n  xl: '2.25rem',\r\n  '2xl': '3rem',\r\n  '3xl': '3.75rem',\r\n  '4xl': '4.5rem',\r\n};\r\n\r\n/*\r\n Usage:\r\n ------\r\n <toolcool-color-picker color=\"#ff0000\" popup-position=\"left\"></toolcool-color-picker>\r\n */\r\ninterface IColorPickerState {\r\n  // popup\r\n  isPopupVisible: boolean;\r\n  popupPosition: string;\r\n\r\n  // color\r\n  initialColor: TinyColor;\r\n  color: TinyColor;\r\n  colorIndex: number;\r\n  themeColors: Array<string>;\r\n\r\n  // button\r\n  buttonWidth?: string | null;\r\n  buttonHeight?: string | null;\r\n  buttonPadding?: string | null;\r\n}\r\n\r\nclass ColorPicker extends HTMLElement {\r\n  static get observedAttributes() {\r\n    return ['color', 'theme-colors', 'color-index', 'popup-position', 'button-width', 'button-height', 'button-padding'];\r\n  }\r\n\r\n  // ----------- APIs ------------------------\r\n\r\n  /**\r\n   * set any color that TinyColor accepts\r\n   */\r\n  public set color(userColor: ColorInput) {\r\n    this.state.color = new TinyColor(userColor);\r\n  }\r\n\r\n  /**\r\n   * returns TinyColor object\r\n   */\r\n  public get color() {\r\n    return this.state.color;\r\n  }\r\n\r\n  public set colorIndex(index: number) {\r\n    this.state.colorIndex = index;\r\n  }\r\n\r\n  public get colorIndex() {\r\n    return this.state.colorIndex;\r\n  }\r\n\r\n  public set themeColors(val: Array<string>) {\r\n    this.state.themeColors = val;\r\n  }\r\n\r\n  public get themeColors() {\r\n    return this.state.themeColors;\r\n  }\r\n\r\n  /**\r\n   * hex format getter\r\n   */\r\n  public get hex() {\r\n    return this.state.color.toHexString().toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * hex with alpha format getter\r\n   */\r\n  public get hex8() {\r\n    return this.state.color.toHex8String().toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * rgb format getter\r\n   */\r\n  public get rgb() {\r\n    return this.state.color.toRgbString();\r\n  }\r\n\r\n  /**\r\n   * rgba format getter\r\n   */\r\n  public get rgba() {\r\n    return rgbaToString(this.state.color);\r\n  }\r\n\r\n  /**\r\n   * hsl format getter\r\n   */\r\n  public get hsl() {\r\n    return this.state.color.toHslString();\r\n  }\r\n\r\n  /**\r\n   * hsla format getter\r\n   */\r\n  public get hsla() {\r\n    return hslaToString(this.state.color);\r\n  }\r\n\r\n  /**\r\n   * hsv format getter\r\n   */\r\n  public get hsv() {\r\n    return this.state.color.toHsvString();\r\n  }\r\n\r\n  /**\r\n   * hsva format getter\r\n   */\r\n  public get hsva() {\r\n    return hsvaToString(this.state.color);\r\n  }\r\n\r\n  public get opened() {\r\n    return this.state.isPopupVisible;\r\n  }\r\n\r\n  public set opened(isOpened: boolean) {\r\n    this.state.isPopupVisible = isOpened;\r\n  }\r\n\r\n  // ------------------------- INIT ----------------\r\n\r\n  // this id attribute is used for custom events\r\n  public readonly cid: string;\r\n  private $button: HTMLElement | null;\r\n  private $buttonColor: HTMLElement | null;\r\n  private $popupBox: HTMLElement | null;\r\n  \r\n  private stateDefaults: IColorPickerState = {\r\n    isPopupVisible: false,\r\n    popupPosition: 'left',\r\n    initialColor: new TinyColor('#000'),\r\n    color: new TinyColor('#000'),\r\n    colorIndex: -1,\r\n    themeColors: [],\r\n    buttonWidth: null,\r\n    buttonHeight: null,\r\n    buttonPadding: null,\r\n  };\r\n  private state: IColorPickerState;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.cid = getUniqueId();\r\n\r\n    // register web components\r\n    if (!customElements.get('toolcool-color-picker-popup')) {\r\n      customElements.define('toolcool-color-picker-popup', ColorPickerPopup);\r\n    }\r\n\r\n    this.attachShadow({\r\n      mode: 'open', // 'closed', 'open',\r\n    });\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.clickedOutside = this.clickedOutside.bind(this);\r\n    this.stopPropagation = this.stopPropagation.bind(this);\r\n\r\n    this.hsvChanged = this.hsvChanged.bind(this);\r\n    this.hueChanged = this.hueChanged.bind(this);\r\n    this.alphaChanged = this.alphaChanged.bind(this);\r\n    this.colorIndexChanged = this.colorIndexChanged.bind(this);\r\n    this.buttonClicked = this.buttonClicked.bind(this);\r\n    this.formatButtonSize = this.formatButtonSize.bind(this);\r\n\r\n    this.initState();\r\n  }\r\n\r\n  // --------------------------------------------------\r\n\r\n  initState() {\r\n    // eslint-disable-next-line\r\n    const scope = this;\r\n    this.state = new Proxy(scope.stateDefaults, {\r\n      // eslint-disable-next-line\r\n      set(target: IColorPickerState, key: string | symbol, value: any, _receiver: any): boolean {\r\n        target[key] = value;\r\n\r\n        if (key === 'isPopupVisible') {\r\n          scope.onPopupVisibilityChange();\r\n        }\r\n\r\n        if (key === 'popupPosition') {\r\n          scope.onPopupPosChange();\r\n        }\r\n\r\n        if (key === 'initialColor') {\r\n          scope.onInitialColorChange();\r\n        }\r\n\r\n        if (key === 'color') {\r\n          scope.onColorChange();\r\n        }\r\n\r\n        if (key === 'colorIndex') {\r\n          scope.onColorIndexChange();\r\n        }\r\n\r\n        if (key === 'themeColors') {\r\n          scope.onThemeColorChange();\r\n        }\r\n\r\n        if (key === 'buttonWidth' || key === 'buttonHeight' || key === 'buttonPadding') {\r\n          scope.setButtonSize();\r\n        }\r\n\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  onPopupVisibilityChange() {\r\n    if (!this.$popupBox) return;\r\n    const colorStr = this.state.color.toRgbString();\r\n    const themeColorStr = JSON.stringify(this.themeColors);\r\n    const popupPos = this.state.popupPosition;\r\n    this.$popupBox.innerHTML = this.state.isPopupVisible\r\n      ? `<toolcool-color-picker-popup color='${colorStr}' color-index='${this.colorIndex}' theme-colors='${themeColorStr}' cid='${this.cid}' popup-position='${popupPos}' />`\r\n      : '';\r\n  }\r\n\r\n  onPopupPosChange() {\r\n    if (!this.$popupBox) return;\r\n\r\n    const $popup = this.$popupBox.querySelector('toolcool-color-picker-popup');\r\n    if (!$popup) return;\r\n\r\n    $popup.setAttribute('popup-position', this.state.popupPosition);\r\n  }\r\n\r\n  onInitialColorChange() {\r\n    const bgColor = rgbaToString(this.state.color);\r\n\r\n    if (this.$buttonColor) {\r\n      this.$buttonColor.style.backgroundColor = bgColor;\r\n    }\r\n\r\n    const $popup = this.shadowRoot?.querySelector('toolcool-color-picker-popup');\r\n    if ($popup) {\r\n      $popup.setAttribute('color', bgColor);\r\n    }\r\n  }\r\n\r\n  setButtonSize() {\r\n    if (!this.$button) return;\r\n\r\n    if (this.state.buttonWidth) {\r\n      this.$button.style.width = this.formatButtonSize(this.state.buttonWidth);\r\n    }\r\n\r\n    if (this.state.buttonHeight) {\r\n      this.$button.style.height = this.formatButtonSize(this.state.buttonHeight);\r\n    }\r\n\r\n    if (this.state.buttonPadding) {\r\n      this.$button.style.padding = this.state.buttonPadding;\r\n    }\r\n  }\r\n\r\n  onColorChange() {\r\n    if (this.$buttonColor) {\r\n      this.$buttonColor.style.backgroundColor = rgbaToString(this.state.color);\r\n    }\r\n  }\r\n\r\n  fireEvent() {\r\n    this.dispatchEvent(\r\n      new CustomEvent('change', {\r\n        bubbles: true, // Allow the event to propagate\r\n        detail: {\r\n          hex: this.hex,\r\n          hex8: this.hex8,\r\n          rgb: this.rgb,\r\n          rgba: this.rgba,\r\n          hsl: this.hsl,\r\n          hsla: this.hsla,\r\n          hsv: this.hsv,\r\n          hsva: this.hsva,\r\n          color: this.color,\r\n          colorIndex: this.colorIndex,\r\n          themeColors: this.themeColors\r\n        },\r\n      })\r\n    );\r\n  }\r\n\r\n  onColorIndexChange() {\r\n    if (this.state.colorIndex >= 0 && this.state.colorIndex < this.state.themeColors.length || 0) {\r\n      const rgba = new TinyColor(this.state.themeColors[this.state.colorIndex]).toRgb();\r\n      rgba.a = this.state.color.a;\r\n      this.state.color = new TinyColor(rgba);\r\n      this.state.initialColor = this.state.color;\r\n    }\r\n    const $popup = this.shadowRoot?.querySelector('toolcool-color-picker-popup');\r\n    if ($popup) {\r\n      $popup.setAttribute('color-index', '' + this.state.colorIndex);\r\n    }\r\n  }\r\n\r\n  onThemeColorChange() {\r\n    if (this.state.colorIndex >= 0 && this.state.colorIndex < this.state.themeColors.length || 0) {\r\n      const rgba = new TinyColor(this.state.themeColors[this.state.colorIndex]).toRgb();\r\n      rgba.a = this.state.color.a;\r\n      this.state.color = new TinyColor(rgba);\r\n      this.state.initialColor = this.state.color;\r\n    }\r\n\r\n    const $popup = this.shadowRoot?.querySelector('toolcool-color-picker-popup');\r\n    if ($popup) {\r\n      $popup.setAttribute('theme-colors', JSON.stringify(this.state.themeColors));\r\n    }\r\n  }\r\n\r\n  hsvChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n    this.state.color = new TinyColor({\r\n      h: evt.detail.h,\r\n      s: evt.detail.s,\r\n      v: evt.detail.v,\r\n      a: this.state.color.toHsv().a,\r\n    });\r\n    this.state.colorIndex = -1;\r\n    this.fireEvent();\r\n  }\r\n\r\n  hueChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n  \r\n    const hsv = this.state.color.toHsv();\r\n    this.state.color = new TinyColor({\r\n      h: evt.detail.h,\r\n      s: hsv.s,\r\n      v: hsv.v,\r\n      a: hsv.a,\r\n    });\r\n    this.state.colorIndex = -1;\r\n    this.fireEvent();\r\n  }\r\n\r\n  alphaChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n \r\n    const rgba = this.state.color.toRgb();\r\n    rgba.a = evt.detail.a;\r\n\r\n    this.state.color = new TinyColor(rgba);\r\n    this.fireEvent();\r\n  }\r\n\r\n  colorIndexChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n\r\n    this.state.colorIndex = parseInt(evt.detail.i || '-1');\r\n\r\n    if (this.state.colorIndex >= 0 && this.state.colorIndex < this.state.themeColors.length || 0) {\r\n      const rgba = new TinyColor(this.state.themeColors[this.state.colorIndex]).toRgb();\r\n      rgba.a = this.state.color.a;\r\n      this.state.color = new TinyColor(rgba);\r\n    } else {\r\n      this.state.color = new TinyColor();\r\n    }\r\n    this.fireEvent();\r\n  }\r\n\r\n  themeColorChanged(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    // handle only current instance\r\n    if (evt.detail.cid !== this.cid) return;\r\n  \r\n    this.state.themeColors = JSON.parse(evt.detail.tc || '[]');\r\n    if (this.state.colorIndex >= 0 && this.state.colorIndex < this.state.themeColors.length || 0) {\r\n      const rgba = new TinyColor(this.state.themeColors[this.state.colorIndex]).toRgb();\r\n      rgba.a = this.state.color.a;\r\n      this.state.color = new TinyColor(rgba);\r\n    } else {\r\n      this.state.color = new TinyColor();\r\n    }\r\n    this.fireEvent();\r\n  }\r\n\r\n  /**\r\n   * when button clicked ---> close all other color pickers\r\n   */\r\n  buttonClicked(evt: CustomEvent) {\r\n    if (!evt || !evt.detail || !evt.detail.cid) return;\r\n\r\n    if (evt.detail.cid === this.cid) return;\r\n\r\n    this.state.isPopupVisible = false;\r\n  }\r\n\r\n  clickedOutside() {\r\n    this.state.isPopupVisible = false;\r\n  }\r\n\r\n  toggle() {\r\n    const isVisible = this.state.isPopupVisible;\r\n\r\n    // setTimeout is used instead stopPropagation\r\n    // to close other popup instances\r\n    window.setTimeout(() => {\r\n      this.state.isPopupVisible = !isVisible;\r\n\r\n      sendButtonClickedCustomEvent(this.cid);\r\n    }, 0);\r\n  }\r\n\r\n  onKeyDown(evt: KeyboardEvent) {\r\n    if (evt.key === 'Escape') {\r\n      // close the popup\r\n      this.state.isPopupVisible = false;\r\n    }\r\n  }\r\n\r\n  stopPropagation(evt: MouseEvent) {\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * button can accept predefined width and height lik sm, lg, etc.\r\n   * and also it can accept any css sizes like 1rem, 50px, etc.\r\n   */\r\n  formatButtonSize(size: string) {\r\n    return buttonPredefinedSizes[size] ?? size;\r\n  }\r\n\r\n  // ------------------------- WEB COMPONENT LIFECYCLE ----------------------------\r\n\r\n  /**\r\n   * when the custom element connected to DOM\r\n   */\r\n  connectedCallback() {\r\n    if (!this.shadowRoot) return;\r\n\r\n    this.state.initialColor = parseColor(this.getAttribute('color'));\r\n    this.state.color = parseColor(this.getAttribute('color'));\r\n    this.state.colorIndex = parseInt(this.getAttribute('color-index') || '-1');\r\n    this.state.themeColors = JSON.parse(this.getAttribute('theme-colors') || '[]');\r\n    this.state.color = parseColor(this.getAttribute('color'));\r\n    this.state.popupPosition = this.getAttribute('popup-position') || 'left';\r\n    this.state.buttonWidth = this.getAttribute('button-width');\r\n    this.state.buttonHeight = this.getAttribute('button-height');\r\n    this.state.buttonPadding = this.getAttribute('button-padding');\r\n\r\n    this.shadowRoot.innerHTML = `\r\n            <style>\r\n                ${styles} \r\n            </style>\r\n            <div class=\"color-picker\" >\r\n                <button\r\n                    type=\"button\"\r\n                    tabIndex=\"0\"\r\n                    class=\"button\"\r\n                    title=\"Select Color\">\r\n                    <span class=\"button-color\" style=\"background: ${rgbaToString(this.state.color)};\"></span>\r\n                </button>\r\n                <div data-popup-box></div>\r\n            </div>\r\n        `;\r\n\r\n    // init button and its events\r\n    this.$button = this.shadowRoot.querySelector('.button');\r\n    this.$buttonColor = this.shadowRoot.querySelector('.button-color');\r\n\r\n    this.$button?.addEventListener('click', this.toggle);\r\n    this.$button?.addEventListener('keydown', this.onKeyDown);\r\n    this.$button?.addEventListener('mousedown', this.stopPropagation);\r\n\r\n    // init popup container\r\n    this.$popupBox = this.shadowRoot.querySelector('[data-popup-box]');\r\n\r\n    // init button dimensions\r\n    this.setButtonSize();\r\n\r\n    // close popup when clicked outside - we use mousedown instead of click to fix strange behaviour when\r\n    // user drags some inner element like saturation point from the bounds of the window,\r\n    // and the popup is suddenly closed\r\n    document.addEventListener('mousedown', this.clickedOutside);\r\n\r\n    // custom event from other parts of the app\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n    document.addEventListener(CUSTOM_EVENT_COLOR_INDEX_CHANGED, this.colorIndexChanged);\r\n    document.addEventListener(CUSTOM_EVENT_THEME_COLOR_CHANGED, this.themeColorChanged);\r\n    document.addEventListener(CUSTOM_EVENT_BUTTON_CLICKED, this.buttonClicked);\r\n  }\r\n\r\n  /**\r\n   * when the custom element disconnected from DOM\r\n   */\r\n  disconnectedCallback() {\r\n    this.$button?.removeEventListener('click', this.toggle);\r\n    this.$button?.removeEventListener('keydown', this.onKeyDown);\r\n    this.$button?.removeEventListener('mousedown', this.stopPropagation);\r\n    document.removeEventListener('mousedown', this.clickedOutside);\r\n\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_COLOR_INDEX_CHANGED, this.colorIndexChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_THEME_COLOR_CHANGED, this.themeColorChanged);\r\n    document.removeEventListener(CUSTOM_EVENT_BUTTON_CLICKED, this.buttonClicked);\r\n  }\r\n\r\n  /**\r\n   * when attributes change\r\n   */\r\n  attributeChangedCallback(attrName: string) {\r\n    switch (attrName) {\r\n      case 'color': {\r\n        this.state.initialColor = parseColor(this.getAttribute('color'));\r\n        this.state.color = parseColor(this.getAttribute('color'));\r\n        this.onInitialColorChange();\r\n        break;\r\n      }\r\n\r\n      case 'color-index': {\r\n        this.state.colorIndex = parseInt(this.getAttribute('color-index') || '-1');\r\n        break;\r\n      }\r\n\r\n      case 'theme-colors': {\r\n        const colorThemeStr = this.getAttribute('theme-colors') || '[]';\r\n        this.state.themeColors = JSON.parse(colorThemeStr);\r\n        break;\r\n      }\r\n\r\n      case 'popup-position': {\r\n        this.state.popupPosition = this.getAttribute('popup-position') || 'left';\r\n        this.onPopupPosChange();\r\n        break;\r\n      }\r\n\r\n      case 'button-width': {\r\n        this.state.buttonWidth = this.getAttribute('button-width');\r\n        this.setButtonSize();\r\n        break;\r\n      }\r\n\r\n      case 'button-height': {\r\n        this.state.buttonHeight = this.getAttribute('button-height');\r\n        this.setButtonSize();\r\n        break;\r\n      }\r\n\r\n      case 'button-padding': {\r\n        this.state.buttonPadding = this.getAttribute('button-padding');\r\n        this.setButtonSize();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ColorPicker;\r\n", "import ColorPicker from './app/color-picker';\r\n\r\n/*\r\n Usage: https://github.com/toolcool-org/toolcool-color-picker\r\n Demo: https://toolcool.org/toolcool-color-picker/\r\n */\r\n\r\n// register web components\r\nif (!customElements.get('toolcool-color-picker')) {\r\n  customElements.define('toolcool-color-picker', ColorPicker);\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": []
}
